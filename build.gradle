plugins {
  id 'com.gradleup.shadow' version '8.3.0'
  id 'java-library'
}

version = project.version

configurations {
  shade
}

repositories {
  maven {
    url = uri("https://maven.pkg.github.com/fooooooooooooooo/night-config")
    credentials {
      username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_USERNAME")
      password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
    }
    content {
      includeGroup "com.electronwill.night-config"
    }
  }
  maven {
    name = 'papermc'
    url = 'https://repo.papermc.io/repository/maven-public/'
  }
  maven {
    name = 'jitpack'
    url = 'https://jitpack.io'
  }
}

dependencies {
  compileOnly("com.velocitypowered:velocity-api:$velocity_version") {
    changing = true
  }
  annotationProcessor("com.velocitypowered:velocity-api:$velocity_version") {
    changing = true
  }

  shade implementation("net.dv8tion:JDA:$jda_version") {
    exclude module: 'opus-java'
  }

  compileOnly "net.kyori:adventure-text-minimessage:$minimessage_version"

  implementation "com.electronwill.night-config:toml:$night_config_version"
  implementation "com.github.unilock:yeplib:$yeplib_version"

  testImplementation platform("org.junit:junit-bom:$junit_version")
  testImplementation 'org.junit.jupiter:junit-jupiter'
  testImplementation "com.electronwill.night-config:toml:$night_config_version"
  testImplementation "ch.qos.logback:logback-classic:$logback_version"

  compileOnly 'net.luckperms:api:5.4'
}

shadowJar {
  setArchiveClassifier(null)
  setConfigurations([project.configurations.shade])
  relocate("net.dv8tion", "ooo.foooooooooooo.velocitydiscord.lib.net.dv8tion")
  minimize()
}

build {
  dependsOn shadowJar
}

test {
  useJUnitPlatform()
  testLogging {
    events "passed", "skipped", "failed"
    showStandardStreams = true
  }
}
